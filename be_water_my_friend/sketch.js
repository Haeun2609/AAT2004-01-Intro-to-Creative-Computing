let canvas
let ctx
let font1, font2
var yoff = 0;
var level1=400;
var level2=300;
let form = []; 
let reForm = [];
let shape = [];
var fontSize = 50;
var r1 = 20
let beShow = true;
let timing = - 50;

function preload(){
  font1 = loadFont('MuseoModerno-ExtraLight.ttf');
  font2 = loadFont('MuseoModerno-SemiBold.ttf');
}
function setup() {
  canvas = createCanvas(400, 400);
  
  //setup canvas code
  ctx = canvas.elt.getContext('2d');
  
  form = font2.textToPoints("form", 155, 150, fontSize,{sampleFactor: 0.3,});
  reForm = font2.textToPoints("form", 155, 150, fontSize,{sampleFactor: 0.3,});
  shape = font2.textToPoints("shape", 125, 150, fontSize,{sampleFactor: 0.2152,});
  print(form.length, shape.length);
  
  
}

function draw() {
  background(0);
 
  formToShape()
  
  if(timing >=100 && timing <=400){
    drawWater();
    if (level2 > 170){
      level1 -= 1;
      level2 -= 1;
    }
  }
  
  if (timing > 70 && timing <350){
    melt();
  }
  
  if (timing > 350 && timing <580){
    drawWater();
    if (level2 < 400){
      level1 += 2;
      level2 += 2;
    }
    Reverse();
  }
  //Like Water
  push();
  translate(0,190)
  likeWater();
  pop();
  
  
  //be ____less
  push();
  if (beShow == true){
    fill(225);
  }
  else {
    fill(0);
  }
  noStroke();
  textFont(font1);
  textSize(fontSize);
  text('be',40,150);
  text('less', 276,150)
  
  pop();
  
  if (timing > 600){
    shapeToForm();
  }
  
  // if (mouseIsPressed){
  // timing = 0;
  // }
  if (timing == 680){
    timing = 0
  }
  timing ++
}
function formToShape(){
  push();
  fill(255);
  noStroke();
  beginShape();
  for (let i = 0; i < form.length; i++) {
    circle(form[i].x, form[i].y, 1);
    if (timing > 0 && timing < 429){
      if (form[i].x < shape[i].x) {
        form[i].x++;
      }

      if (form[i].x > shape[i].x) {
        form[i].x--;
      }

      if (form[i].y > shape[i].y) {
        form[i].y--;
      }

      if (form[i].y < shape[i].y) {
        form[i].y++;
      }
    }
  }
  endShape(CLOSE);
  pop();
}

function melt(){
  beShow = false;
  push();
  //fill(100,200,255);
  fill(255)
  noStroke();
  for (let i = 0; i < form.length; i++) {
    r1 = map(dist(form[i].x,form[i].y,shape[i].x,shape[i].y),50,0,20,1)
    circle(form[i].x, form[i].y,r1);
    //circle(form[i].x,form[i].y+40,r1);
    if (form[i].y < height){
    form[i].y += random(5);}
    
  }
  pop();
}

function drawWater(){
  push();
  background(0);
  noStroke();
  //fill(100,200,255);
  fill(255)
  beginShape();
  let xoff = 0; 
  for (let x = 0; x <= width; x += 10) {
    let y = map(noise(xoff, yoff), 0, 1, level1, level2);
    vertex(x, y);
    xoff += 0.05;
  }
  yoff += 0.01;
  vertex(width, height);
  vertex(0, height);
  endShape(CLOSE);
  pop();
}

function likeWater(){
  scale(120);
  ctx.save();
  ctx.scale(0.041666666666666664,0.041666666666666664);
  ctx.translate(0.8888888888888857,0);
  ctx.scale(0.040740740740740744,0.040740740740740744);
  ctx.save();
  ctx.font="   15px ";
  ctx.save();
  ctx.font="   15px ";
  ctx.save();
  ctx.font="   15px ";
  ctx.save();
  ctx.fillStyle = '#000000'
  ctx.beginPath();
  ctx.moveTo(650.7,265.2);
  ctx.bezierCurveTo(652.1,301.7,654.1,338.2,656.4000000000001,374.6);
  ctx.bezierCurveTo(658.5000000000001,407.8,660.6000000000001,441.20000000000005,662.8000000000001,474.3);
  ctx.bezierCurveTo(663.9000000000001,490.3,662.3000000000001,512,668.8000000000001,523.9);
  ctx.bezierCurveTo(670.5000000000001,526.9,676.7,530.8,684.7,534.9);
  ctx.bezierCurveTo(692.7,539,699.9000000000001,542.4,708.2,545.6999999999999);
  ctx.bezierCurveTo(717.5,549.4,727.1,552.5999999999999,737,555.3);
  ctx.bezierCurveTo(747.7,558.0999999999999,758.5,561.5999999999999,768.9,564.1999999999999);
  ctx.bezierCurveTo(785.5,568.4,785.9,599.4999999999999,786,611.8);
  ctx.bezierCurveTo(786.1,619,786.4,658.1999999999999,771.1,650.5999999999999);
  ctx.bezierCurveTo(761.2,645.6999999999999,750.3000000000001,637.3,739.8000000000001,630.8);
  ctx.bezierCurveTo(730.4000000000001,625,720.5000000000001,619.5999999999999,710.6,614.8);
  ctx.bezierCurveTo(701.5,610.4,693.6,607,684.5,603.5);
  ctx.bezierCurveTo(674.7,599.7,664.2,595.7,654.4,593.4);
  ctx.bezierCurveTo(645.5,591.3,636.6999999999999,585.6999999999999,630.1999999999999,576);
  ctx.bezierCurveTo(621.6999999999999,563.2,619.3,546.7,618.8,531.5);
  ctx.bezierCurveTo(618.1999999999999,510.8,617,489.7,615.4,468.9);
  ctx.bezierCurveTo(613.1,437.5,610,406,606.8,374.59999999999997);
  ctx.bezierCurveTo(603.1999999999999,339.9,599.3,305,594.8,270.5);
  ctx.bezierCurveTo(591.5999999999999,245.9,587.3,220.3,583.0999999999999,196.7);
  ctx.bezierCurveTo(579.6999999999999,177.79999999999998,597.0999999999999,167.2,614.1999999999999,164.79999999999998);
  ctx.bezierCurveTo(630.9,162.49999999999997,648.8,170.29999999999998,648.3,189.49999999999997);
  ctx.bezierCurveTo(647.6,213.5,649.7,240,650.7,265.2);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  //letter "I"
  ctx.beginPath();
  ctx.moveTo(827.5,181.5);
  ctx.bezierCurveTo(845.4,189.2,861.8,204,861,224.9);
  ctx.bezierCurveTo(859.6,258.9,857.2,294.1,856,328.7);
  ctx.bezierCurveTo(854.9,361.5,854.3,394.5,854,427.29999999999995);
  ctx.bezierCurveTo(853.7,460.29999999999995,853.8,493.4,854.2,526.4);
  ctx.bezierCurveTo(854.6,562.3,854.6,598.6999999999999,855.6,634);
  ctx.bezierCurveTo(856,647.2,851,664.1,835.1,663.8);
  ctx.bezierCurveTo(818.2,663.5,811,645.4,811.2,631);
  ctx.bezierCurveTo(811.6,594.8,810.2,556.7,809.6,519.6);
  ctx.bezierCurveTo(809,484.70000000000005,808,449.70000000000005,806.9,414.8);
  ctx.bezierCurveTo(805.8,380,804.4,345.1,802.8,310.20000000000005);
  ctx.bezierCurveTo(801,273.30000000000007,800.5,234.70000000000005,796.9,199.50000000000006);
  ctx.bezierCurveTo(794.7,178.8,810.3,174.1,827.5,181.5);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "K"
  ctx.beginPath();
  ctx.moveTo(940.1,228.3);
  ctx.bezierCurveTo(955.8000000000001,234.20000000000002,973.2,246.20000000000002,968.9,265.6);
  ctx.bezierCurveTo(964.3,286.5,960.8,307.70000000000005,957.8,328.8);
  ctx.bezierCurveTo(954.6999999999999,351,950.0999999999999,395.8,950.0999999999999,395.8);
  ctx.bezierCurveTo(951.8999999999999,397.1,980.1999999999999,367.1,992.3,355.2);
  ctx.bezierCurveTo(1015.6999999999999,332.2,1040.1,309.7,1062.8999999999999,285.79999999999995);
  ctx.bezierCurveTo(1074.3,273.09999999999997,1091.8,277.29999999999995,1103.8999999999999,285.69999999999993);
  ctx.bezierCurveTo(1112.4999999999998,291.69999999999993,1124.1999999999998,305.29999999999995,1110.8,313.99999999999994);
  ctx.bezierCurveTo(1087.1,332.29999999999995,1063.3999999999999,350.8999999999999,1041.3,370.49999999999994);
  ctx.bezierCurveTo(1028.8999999999999,381.3999999999999,1004.5999999999999,399.3999999999999,1003.5999999999999,412.49999999999994);
  ctx.bezierCurveTo(1002.3999999999999,428.3999999999999,1023.5999999999999,455.49999999999994,1035.6999999999998,472.49999999999994);
  ctx.bezierCurveTo(1052.1999999999998,495.69999999999993,1070.2999999999997,517.8,1092.2999999999997,536.3);
  ctx.bezierCurveTo(1100.0999999999997,547.6999999999999,1081.1999999999998,560.5999999999999,1073.7999999999997,566.6999999999999);
  ctx.bezierCurveTo(1066.3999999999996,572.9,1044.4999999999998,592.5999999999999,1034.9999999999998,577.6999999999999);
  ctx.bezierCurveTo(1023.5999999999998,555.0999999999999,1009.4999999999998,533.9,996.5999999999998,512.0999999999999);
  ctx.bezierCurveTo(989.4999999999998,500.0999999999999,978.7999999999998,472.4999999999999,964.9999999999998,466.9999999999999);
  ctx.bezierCurveTo(961.9999999999998,465.7999999999999,957.3999999999997,469.39999999999986,951.7999999999997,477.7999999999999);
  ctx.bezierCurveTo(946.1999999999997,486.1999999999999,943.0999999999997,493.4999999999999,942.5999999999997,499.3999999999999);
  ctx.bezierCurveTo(940.9999999999997,517.8,939.3999999999996,536.1999999999999,938.7999999999997,554.6999999999999);
  ctx.bezierCurveTo(938.1999999999997,573.0999999999999,937.5999999999997,591.4999999999999,937.1999999999997,609.9);
  ctx.bezierCurveTo(936.7999999999997,626.5,921.6999999999997,639,908.4999999999997,645.1);
  ctx.bezierCurveTo(893.8999999999996,651.9,883.3999999999996,642.6,884.9999999999997,627.7);
  ctx.bezierCurveTo(888.3999999999996,596.7,892.0999999999997,565,894.5999999999997,533.7);
  ctx.bezierCurveTo(897.2999999999997,500.50000000000006,899.5999999999997,467.1,901.4999999999997,433.80000000000007);
  ctx.bezierCurveTo(903.4999999999997,399.70000000000005,904.7999999999996,365.30000000000007,905.2999999999996,331.1000000000001);
  ctx.bezierCurveTo(905.6999999999996,302.1000000000001,905.5999999999996,272.7000000000001,905.1999999999996,243.70000000000007);
  ctx.bezierCurveTo(904.7,222.8,924.6,222.5,940.1,228.3);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "E"
  ctx.beginPath();
  ctx.moveTo(1240.6,325);
  ctx.bezierCurveTo(1231.3999999999999,327.6,1222.5,330.2,1214.6,332.5);
  ctx.bezierCurveTo(1207.3999999999999,334.6,1202.8,336.1,1194.1,337.1);
  ctx.bezierCurveTo(1185.3999999999999,338.1,1180.8999999999999,338.6,1180,339.90000000000003);
  ctx.bezierCurveTo(1178.5,341.90000000000003,1177.4,351.6,1176.1,365.40000000000003);
  ctx.bezierCurveTo(1174.6999999999998,379.3,1174.3,388.70000000000005,1174.8,393.6);
  ctx.bezierCurveTo(1178.6,393.90000000000003,1185,394.40000000000003,1191.8,394.3);
  ctx.bezierCurveTo(1198.5,394.2,1201.8,393.90000000000003,1206.2,393.2);
  ctx.bezierCurveTo(1210.3,392.5,1215.7,391.4,1223.1000000000001,389.59999999999997);
  ctx.bezierCurveTo(1230.4,387.79999999999995,1240.0000000000002,385.29999999999995,1250.0000000000002,380.99999999999994);
  ctx.bezierCurveTo(1263.3000000000002,375.19999999999993,1268.8000000000002,388.99999999999994,1267.4000000000003,399.59999999999997);
  ctx.bezierCurveTo(1265.8000000000004,411.4,1258.9000000000003,425.4,1245.0000000000002,426.09999999999997);
  ctx.bezierCurveTo(1235.2000000000003,426.49999999999994,1226.8000000000002,426.79999999999995,1219.5000000000002,426.79999999999995);
  ctx.bezierCurveTo(1212.3000000000002,426.79999999999995,1206.6000000000001,427.09999999999997,1202.1000000000001,427.49999999999994);
  ctx.bezierCurveTo(1197.6000000000001,427.99999999999994,1194.0000000000002,428.69999999999993,1187.3000000000002,430.29999999999995);
  ctx.bezierCurveTo(1180.6000000000001,431.79999999999995,1174.8000000000002,432.4,1171.1000000000001,432.59999999999997);
  ctx.bezierCurveTo(1168.5000000000002,443.2,1167.5000000000002,454.2,1166.4,464.99999999999994);
  ctx.bezierCurveTo(1165.3000000000002,476.09999999999997,1164.2,487.29999999999995,1164.7,498.3999999999999);
  ctx.bezierCurveTo(1166.3,499.49999999999994,1170.4,500.0999999999999,1176.9,500.3999999999999);
  ctx.bezierCurveTo(1183.4,500.7999999999999,1188.1000000000001,501.3999999999999,1194.2,501.5999999999999);
  ctx.bezierCurveTo(1200.7,501.7999999999999,1209.4,501.69999999999993,1221.2,501.19999999999993);
  ctx.bezierCurveTo(1233.7,500.69999999999993,1246.8,500.79999999999995,1258.8,499.99999999999994);
  ctx.bezierCurveTo(1273.6,499.09999999999997,1278.3999999999999,513.9,1277,526.0999999999999);
  ctx.bezierCurveTo(1275.5,538.4999999999999,1267.6,553.3999999999999,1253.2,550.3999999999999);
  ctx.bezierCurveTo(1241.2,547.8999999999999,1228.6000000000001,544.4999999999999,1216.1000000000001,542.3999999999999);
  ctx.bezierCurveTo(1204.3000000000002,540.3999999999999,1195.4,539.1999999999998,1188.6000000000001,538.4999999999999);
  ctx.bezierCurveTo(1181.5000000000002,537.7999999999998,1176.5000000000002,537.4999999999999,1170.8000000000002,538.2999999999998);
  ctx.bezierCurveTo(1165.0000000000002,538.9999999999999,1157.4,540.3999999999999,1148.2000000000003,543.6999999999998);
  ctx.bezierCurveTo(1140.0000000000002,546.5999999999998,1132.7000000000003,547.3999999999999,1127.6000000000004,543.9999999999998);
  ctx.bezierCurveTo(1122.5000000000005,540.5999999999998,1121.1000000000004,532.6999999999998,1123.9000000000003,520.4999999999998);
  ctx.bezierCurveTo(1127.4000000000003,504.7999999999998,1129.9000000000003,488.5999999999998,1132.2000000000003,472.5999999999998);
  ctx.bezierCurveTo(1134.5000000000002,456.1999999999998,1136.8000000000002,439.6999999999998,1138.7000000000003,423.2999999999998);
  ctx.bezierCurveTo(1140.5000000000002,406.8999999999998,1142.0000000000002,390.2999999999998,1143.4000000000003,373.7999999999998);
  ctx.bezierCurveTo(1144.8000000000004,357.69999999999976,1145.5000000000002,340.8999999999998,1146.2000000000003,325.3999999999998);
  ctx.bezierCurveTo(1146.6000000000004,314.3999999999998,1150.5000000000002,306.0999999999998,1155.9000000000003,301.8999999999998);
  ctx.bezierCurveTo(1161.3000000000004,297.6999999999998,1168.7000000000003,297.49999999999983,1176.5000000000002,299.0999999999998);
  ctx.bezierCurveTo(1182.0000000000002,300.1999999999998,1186.9000000000003,301.1999999999998,1197.4000000000003,300.9999999999998);
  ctx.bezierCurveTo(1207.9000000000003,300.7999999999998,1212.3000000000004,299.0999999999998,1219.1000000000004,296.69999999999976);
  ctx.bezierCurveTo(1225.9000000000003,294.2999999999998,1234.1000000000004,290.59999999999974,1244.2000000000003,285.4999999999998);
  ctx.bezierCurveTo(1256.0000000000002,279.4999999999998,1268.5000000000002,273.69999999999976,1279.5000000000002,267.39999999999975);
  ctx.bezierCurveTo(1292.4000000000003,259.9999999999998,1300.9000000000003,266.59999999999974,1298.9000000000003,281.2999999999997);
  ctx.bezierCurveTo(1296.8000000000004,296.09999999999974,1288.7000000000003,311.1999999999997,1274.2000000000003,315.7999999999997);
  ctx.bezierCurveTo(1263.4,319.2,1251.7,321.8,1240.6,325);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.restore();
  ctx.restore();
  ctx.save();
  ctx.font="   15px ";
  ctx.save();
  ctx.font="   15px ";
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "W"
  ctx.beginPath();
  ctx.moveTo(744.2,959.5);
  ctx.bezierCurveTo(736.8000000000001,957.9,727.3000000000001,951.5,726.5,940.6);
  ctx.bezierCurveTo(724.2,909.4,723.8,874.6,721.3,841.8000000000001);
  ctx.bezierCurveTo(718.8,808.9000000000001,715.8,775.5000000000001,708.8,743.1);
  ctx.bezierCurveTo(700.4,770.9,698.1999999999999,800.6,696.0999999999999,829.3000000000001);
  ctx.bezierCurveTo(693.6999999999999,862.1,690.4999999999999,897.1,691.5999999999999,928.3000000000001);
  ctx.bezierCurveTo(691.9999999999999,939.3000000000001,696.1999999999999,943.6,690.6999999999999,940.6);
  ctx.bezierCurveTo(685.1999999999999,937.6,675.1999999999999,930.5,673.9999999999999,920);
  ctx.bezierCurveTo(671.3999999999999,898,670.1999999999999,873.2,667.5999999999999,850);
  ctx.bezierCurveTo(664.3999999999999,821.9,660.6999999999999,793.6,656.3,765.6);
  ctx.bezierCurveTo(652.5,740.9,648.4,716.1,643.0999999999999,691.6);
  ctx.bezierCurveTo(638.5999999999999,671.1,633.8,650.5,629.0999999999999,630.1);
  ctx.bezierCurveTo(625.9999999999999,616.8000000000001,629.1999999999999,609.6,639.0999999999999,609.6);
  ctx.bezierCurveTo(648.9999999999999,609.6,654.5999999999999,617,655.8,630.8000000000001);
  ctx.bezierCurveTo(657.9,656.1,662,681.7,665.5,707.0000000000001);
  ctx.bezierCurveTo(669.9,738.4000000000001,674.4,769.7000000000002,679.3,801.0000000000001);
  ctx.bezierCurveTo(682.0999999999999,773.6000000000001,685.1999999999999,746.1000000000001,688.5,718.8000000000001);
  ctx.bezierCurveTo(691.1,697.0000000000001,693.6,674.7,695.3,653.1);
  ctx.bezierCurveTo(696.3,640.5,701.0999999999999,636.2,709.6999999999999,641);
  ctx.bezierCurveTo(719.4,646.5,723.0999999999999,658,723.4,668.4);
  ctx.bezierCurveTo(724,691.6999999999999,727.5,715.6999999999999,730.1999999999999,739.1999999999999);
  ctx.bezierCurveTo(733.6999999999999,768.9999999999999,737.1999999999999,798.8,741.0999999999999,828.5999999999999);
  ctx.bezierCurveTo(746.9999999999999,801.8,751.8,774.6999999999999,756.3,747.6999999999999);
  ctx.bezierCurveTo(759.9,725.9999999999999,763.8,703.9999999999999,766.0999999999999,682.1999999999999);
  ctx.bezierCurveTo(767.3999999999999,669.9,773.1999999999999,667.8,783.3999999999999,675.0999999999999);
  ctx.bezierCurveTo(793.5999999999999,682.3999999999999,797.1999999999998,690.8999999999999,794.3999999999999,701.6999999999999);
  ctx.bezierCurveTo(789.3999999999999,721.3,784.1999999999998,740.9,779.3999999999999,760.4);
  ctx.bezierCurveTo(775.0999999999999,777.5,771.1999999999998,794.9,768.1999999999998,812.1);
  ctx.bezierCurveTo(763.8999999999999,836.6,760.7999999999998,861.9,757.6999999999998,886.8000000000001);
  ctx.bezierCurveTo(755.2999999999998,906.9000000000001,751.7999999999998,928.2,751.5999999999998,947.2);
  ctx.bezierCurveTo(751.5,956.8,751.6,961.1,744.2,959.5);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "A"
  ctx.beginPath();
  ctx.moveTo(855.1,684);
  ctx.bezierCurveTo(862.9,682.7,867.6,689.1,868.5,703.6);
  ctx.bezierCurveTo(869.6,720.9,872.1,738.9,874.5,756.4);
  ctx.bezierCurveTo(877.6,780,880.9,804,884.7,827.3);
  ctx.bezierCurveTo(888.4000000000001,850.3,893.3000000000001,873.5999999999999,898.2,896.5999999999999);
  ctx.bezierCurveTo(902.8000000000001,917.8999999999999,907.5,939.3999999999999,912.2,960.5999999999999);
  ctx.bezierCurveTo(914.7,971.8,911.9000000000001,977.8,900.6,980.3999999999999);
  ctx.bezierCurveTo(889.3000000000001,982.9999999999999,881.9,978.1999999999998,880.5,965.8999999999999);
  ctx.bezierCurveTo(878.9,951.8999999999999,878.5,936.6999999999998,876,922.3999999999999);
  ctx.bezierCurveTo(874.1,911.3999999999999,872.3,904.5999999999999,871.9,902.5999999999999);
  ctx.bezierCurveTo(871.3,899.8,868.9,896.8,863.9,895.0999999999999);
  ctx.bezierCurveTo(858.9,893.3999999999999,853.1999999999999,892.4999999999999,847,892.3);
  ctx.bezierCurveTo(842.1,892.0999999999999,836.9,892.6999999999999,831.2,893.9);
  ctx.bezierCurveTo(825.5000000000001,895.1,822.1,897.1999999999999,821.1,900.4);
  ctx.bezierCurveTo(820.1,903.6,818.4,911.3,816.1,923.5);
  ctx.bezierCurveTo(813.9,935.5,811.1,948.3,810.5,960);
  ctx.bezierCurveTo(810,970,807.6,973.6,797.5,970.5);
  ctx.bezierCurveTo(787.5,967.4,780.3,961.3,783.8,950.5);
  ctx.bezierCurveTo(789.5,932.7,793.5999999999999,913.5,798.3,895);
  ctx.bezierCurveTo(804.0999999999999,872.2,809.9,849.2,815.1999999999999,826.4);
  ctx.bezierCurveTo(820.4,803.8,825.3,780.8,829.9,758.1);
  ctx.bezierCurveTo(833.3,741.4,836.5,724.3000000000001,839,707.5);
  ctx.bezierCurveTo(841.1,692.8,847.3,685.3,855.1,684);
  ctx.closePath();
  ctx.moveTo(842.1,798.2);
  ctx.bezierCurveTo(838.8000000000001,813.3000000000001,830.8000000000001,833.1,832.9,846.6);
  ctx.bezierCurveTo(833.1999999999999,848.6,835.6999999999999,850.6,839.4,851.8000000000001);
  ctx.bezierCurveTo(843,853.0000000000001,845.5,853.6,847.6999999999999,853.7);
  ctx.bezierCurveTo(850.6999999999999,853.7,853.8,853,857.0999999999999,851.6);
  ctx.bezierCurveTo(860.3999999999999,850.2,863.3,848.2,863.6999999999999,846.8000000000001);
  ctx.bezierCurveTo(867.1999999999999,835.5000000000001,860.9,814.2,858.9999999999999,798.5000000000001);
  ctx.bezierCurveTo(857.2999999999998,784.2000000000002,852.0999999999999,753.3000000000001,852.0999999999999,753.3000000000001);
  ctx.bezierCurveTo(851.4,753.2,845.4,783.4,842.1,798.2);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "T"
  ctx.beginPath();
  ctx.moveTo(950.4,653.1);
  ctx.bezierCurveTo(960.6,650.2,971.1999999999999,646.2,980.8,641.7);
  ctx.bezierCurveTo(991,637,1001.5,631.4000000000001,1010.9,625.2);
  ctx.bezierCurveTo(1020,619.3000000000001,1030.2,611.9000000000001,1039.1,608.4000000000001);
  ctx.bezierCurveTo(1049.6999999999998,604.3000000000001,1050.5,632.5000000000001,1050.6999999999998,638.9000000000001);
  ctx.bezierCurveTo(1050.9999999999998,647.4000000000001,1052.6999999999998,674.2,1041.3999999999999,676.3000000000001);
  ctx.bezierCurveTo(1035.3999999999999,677.4000000000001,1027.6999999999998,678.0000000000001,1020.3999999999999,679.6);
  ctx.bezierCurveTo(1013.0999999999999,681.2,1006.8999999999999,684.7,1001.3999999999999,690.3000000000001);
  ctx.bezierCurveTo(996.3999999999999,704.1,998.8999999999999,722.8000000000001,998.9999999999999,737.2);
  ctx.bezierCurveTo(999.1999999999999,764.7,999.6999999999999,792.5,1000.7999999999998,820.1);
  ctx.bezierCurveTo(1001.6999999999998,843.7,1003.0999999999998,867.4,1004.9999999999999,891);
  ctx.bezierCurveTo(1006.7999999999998,914.1,1007.7999999999998,938.5,1010.9999999999999,960.4);
  ctx.bezierCurveTo(1012.6999999999999,972.3,1006.3999999999999,978.8,993.8999999999999,979.4);
  ctx.bezierCurveTo(981.3999999999999,980,975.5999999999999,974.4,975.3999999999999,962.9);
  ctx.bezierCurveTo(975.1999999999998,941.1999999999999,976.1999999999998,917.9,975.7999999999998,895.4);
  ctx.bezierCurveTo(975.3999999999999,872.5,974.6999999999998,849.4,973.7999999999998,826.5);
  ctx.bezierCurveTo(972.7999999999998,800,971.3999999999999,773.4,969.7999999999998,747);
  ctx.bezierCurveTo(968.9999999999999,734.8,970.3999999999999,716.1,964.4999999999999,704.8);
  ctx.bezierCurveTo(957.7999999999998,705.4,951.2999999999998,707.3,945.0999999999999,710.0999999999999);
  ctx.bezierCurveTo(938.8999999999999,712.9999999999999,931.1999999999999,718.5999999999999,924.6999999999999,720.8999999999999);
  ctx.bezierCurveTo(915.6999999999999,723.9999999999999,915.0999999999999,703.0999999999999,914.8,695.4999999999999);
  ctx.bezierCurveTo(914.3,685.0999999999999,913.5,666.2999999999998,923.0999999999999,661.5999999999999);
  ctx.bezierCurveTo(930.2,658.3,940.6,655.8,950.4,653.1);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "E"
  ctx.beginPath();
  ctx.moveTo(1135.5,632.3);
  ctx.bezierCurveTo(1131,632.5999999999999,1126,633.5999999999999,1120.5,635.5);
  ctx.bezierCurveTo(1115.5,637.2,1110.7,639.1,1106,641.2);
  ctx.bezierCurveTo(1101.3,643.3000000000001,1097.6,646,1096.9,648.4000000000001);
  ctx.bezierCurveTo(1093.8000000000002,659.2,1096.2,676.1000000000001,1096.5,689.9000000000001);
  ctx.bezierCurveTo(1096.8,704.9000000000001,1097,719.9000000000001,1098.7,734.8000000000001);
  ctx.bezierCurveTo(1102,734.5000000000001,1105.8,734.1,1110.1000000000001,733.9000000000001);
  ctx.bezierCurveTo(1114.4,733.7,1118.0000000000002,733.1000000000001,1121.1000000000001,732.2);
  ctx.bezierCurveTo(1123.9,731.3000000000001,1127.4,730.1,1131.3000000000002,728.6);
  ctx.bezierCurveTo(1135.2000000000003,727.1,1140.3000000000002,722.5,1143.8000000000002,721.2);
  ctx.bezierCurveTo(1150.3000000000002,718.9000000000001,1151.9,746.4000000000001,1152.0000000000002,752.3000000000001);
  ctx.bezierCurveTo(1152.1000000000001,761.0000000000001,1152.4000000000003,785.9000000000001,1144.6000000000001,787.4000000000001);
  ctx.bezierCurveTo(1141.6000000000001,788.0000000000001,1136.4,786.6000000000001,1132.5000000000002,786.2);
  ctx.bezierCurveTo(1128.6000000000001,785.8000000000001,1125.1000000000001,786,1122.0000000000002,786.9000000000001);
  ctx.bezierCurveTo(1119.0000000000002,787.8000000000001,1115.3000000000002,789.5000000000001,1111.0000000000002,792.2);
  ctx.bezierCurveTo(1106.7000000000003,794.9000000000001,1103.0000000000002,796.6,1100.0000000000002,797.5);
  ctx.bezierCurveTo(1098.8000000000002,814.8,1099.5000000000002,832.4,1099.9000000000003,849.6);
  ctx.bezierCurveTo(1100.3000000000004,867.4,1100.4000000000003,885.5,1102.3000000000004,903.3000000000001);
  ctx.bezierCurveTo(1103.7000000000005,905.2,1106.8000000000004,906.1,1111.6000000000004,906.2);
  ctx.bezierCurveTo(1116.4000000000003,906.3000000000001,1120.7000000000003,905.8000000000001,1124.6000000000004,904.9000000000001);
  ctx.bezierCurveTo(1128.8000000000004,903.9000000000001,1133.7000000000003,902.3000000000001,1139.1000000000004,899.8000000000001);
  ctx.bezierCurveTo(1144.6000000000004,897.4000000000001,1150.5000000000005,893.9000000000001,1154.5000000000005,893.2);
  ctx.bezierCurveTo(1161.9000000000005,892,1162.1000000000004,919.3000000000001,1162.2000000000005,925.5);
  ctx.bezierCurveTo(1162.4000000000005,937.4,1159.6000000000006,957.8,1150.4000000000005,959.5);
  ctx.bezierCurveTo(1147.9000000000005,959.9,1142.2000000000005,958.8,1137.1000000000006,959.1);
  ctx.bezierCurveTo(1132.0000000000007,959.4,1127.2000000000005,960,1122.9000000000005,960.9);
  ctx.bezierCurveTo(1118.4000000000005,961.8,1113.8000000000006,963,1109.3000000000006,964.4);
  ctx.bezierCurveTo(1104.8000000000006,965.8,1098.9000000000005,967.4,1092.8000000000006,969.6999999999999);
  ctx.bezierCurveTo(1087.0000000000007,971.9,1083.2000000000007,970.5999999999999,1080.8000000000006,964.6999999999999);
  ctx.bezierCurveTo(1076.4000000000005,953.9999999999999,1075.8000000000006,941.6999999999999,1076.1000000000006,929.9);
  ctx.bezierCurveTo(1076.8000000000006,906.5,1076.3000000000006,882.8,1076.0000000000007,859.1999999999999);
  ctx.bezierCurveTo(1075.6000000000006,834.6999999999999,1075.3000000000006,809.9999999999999,1074.6000000000006,785.4999999999999);
  ctx.bezierCurveTo(1073.9000000000005,760.8999999999999,1072.9000000000005,736.1999999999999,1071.9000000000005,711.5999999999999);
  ctx.bezierCurveTo(1070.9000000000005,687.8999999999999,1069.6000000000006,663.8,1067.9000000000005,640.4999999999999);
  ctx.bezierCurveTo(1067.0000000000005,627.7999999999998,1067.5000000000005,613.7999999999998,1072.2000000000005,601.6999999999999);
  ctx.bezierCurveTo(1075.7000000000005,592.5999999999999,1082.1000000000006,587.9,1088.8000000000004,586.4999999999999);
  ctx.bezierCurveTo(1093.7000000000005,585.4999999999999,1099.3000000000004,583.7999999999998,1104.7000000000005,582.7999999999998);
  ctx.bezierCurveTo(1110.0000000000005,581.7999999999998,1115.1000000000006,580.3999999999999,1119.8000000000004,578.6999999999998);
  ctx.bezierCurveTo(1124.6000000000004,576.9999999999998,1129.5000000000005,574.7999999999998,1134.4000000000003,572.0999999999998);
  ctx.bezierCurveTo(1139.3000000000004,569.3999999999997,1145.1000000000004,565.7999999999998,1149.3000000000004,565.0999999999998);
  ctx.bezierCurveTo(1157.0000000000005,563.6999999999998,1157.1000000000004,590.4999999999998,1157.2000000000005,596.4999999999998);
  ctx.bezierCurveTo(1157.3000000000004,606.4999999999998,1156.7000000000005,631.9999999999998,1150.1000000000006,633.4999999999998);
  ctx.bezierCurveTo(1146.9,634,1140,632.1,1135.5,632.3);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  
  //letter "R"
  ctx.beginPath();
  ctx.moveTo(1201.8,568.1);
  ctx.bezierCurveTo(1208.7,568.8000000000001,1215.2,568.2,1221.5,566.1);
  ctx.bezierCurveTo(1238.9,560.2,1252.3,574.4,1256.7,590);
  ctx.bezierCurveTo(1263.4,613.7,1264.1000000000001,640.9,1261.1000000000001,665.9);
  ctx.bezierCurveTo(1258.5000000000002,687.5,1256.0000000000002,710,1249.7,730.6);
  ctx.bezierCurveTo(1246.7,740.5,1243.4,753.1,1235.5,760.9);
  ctx.bezierCurveTo(1239.9,763.1,1242.6,769.9,1243.7,781.1999999999999);
  ctx.bezierCurveTo(1245,794.4,1243.7,807.9999999999999,1242,820.9999999999999);
  ctx.bezierCurveTo(1240.2,834.6999999999999,1239.1,848.6999999999999,1237.9,862.5999999999999);
  ctx.bezierCurveTo(1236.6000000000001,877.4999999999999,1235,892.5999999999999,1234.1000000000001,907.3999999999999);
  ctx.bezierCurveTo(1233.4,919.5999999999999,1223.3000000000002,926.7999999999998,1219.0000000000002,929.8999999999999);
  ctx.bezierCurveTo(1214.7000000000003,932.8999999999999,1219.9000000000003,928.1999999999998,1220.7000000000003,914.9999999999999);
  ctx.bezierCurveTo(1221.5000000000002,903.4999999999999,1222.6000000000004,891.6999999999999,1223.4000000000003,880.1999999999999);
  ctx.bezierCurveTo(1224.2000000000003,868.6999999999999,1224.9000000000003,856.9,1225.4000000000003,845.4999999999999);
  ctx.bezierCurveTo(1225.9000000000003,833.2999999999998,1226.5000000000002,819.9999999999999,1223.5000000000002,807.8999999999999);
  ctx.bezierCurveTo(1221.4000000000003,799.1999999999998,1217.0000000000002,794.2999999999998,1213.3000000000002,792.4999999999999);
  ctx.bezierCurveTo(1210.9,791.2999999999998,1206.9,791.0999999999999,1201.8000000000002,793.4999999999999);
  ctx.bezierCurveTo(1196.6000000000001,795.8999999999999,1193.6000000000001,799.2999999999998,1192.9,803.6999999999999);
  ctx.bezierCurveTo(1191.4,818.8,1192.5,834.3,1192.8000000000002,849.4);
  ctx.bezierCurveTo(1193.3000000000002,874.6999999999999,1193.1000000000001,900.6999999999999,1194.8000000000002,925.3);
  ctx.bezierCurveTo(1195.7000000000003,938.5999999999999,1186.9,946.3,1179.9,948.9);
  ctx.bezierCurveTo(1172.9,951.4,1174.2,945.8,1174.2,931.8);
  ctx.bezierCurveTo(1174.1000000000001,906.5999999999999,1175.1000000000001,880.1999999999999,1175,854.4);
  ctx.bezierCurveTo(1174.9,822.5,1174.6,790.4,1174.2,758.5);
  ctx.bezierCurveTo(1173.8,730.2,1173.4,701.9,1172.7,673.7);
  ctx.bezierCurveTo(1172.2,651.7,1171.3,629.5,1170.1000000000001,607.6);
  ctx.bezierCurveTo(1169.4,594.7,1169.3000000000002,581,1172.6000000000001,568.5);
  ctx.bezierCurveTo(1174.8000000000002,560.1,1176.0000000000002,558.6,1180.8000000000002,561.8);
  ctx.bezierCurveTo(1186.8,565.5,1194.9,567.4,1201.8,568.1);
  ctx.closePath();
  ctx.moveTo(1192.1,678.9);
  ctx.bezierCurveTo(1191.8999999999999,694.6999999999999,1192.3,710.4,1192.8999999999999,726.1999999999999);
  ctx.bezierCurveTo(1194.8999999999999,728.3,1197.8,730.0999999999999,1201.4999999999998,731.6999999999999);
  ctx.bezierCurveTo(1205.1999999999998,733.3,1208.1999999999998,733.9999999999999,1210.4999999999998,733.9);
  ctx.bezierCurveTo(1217.2999999999997,733.5,1223.2999999999997,728.6,1228.3999999999999,719.5);
  ctx.bezierCurveTo(1235.3,707.2,1237.3,691.2,1238.3,677.4);
  ctx.bezierCurveTo(1239.1,665.9,1240.6,647.8,1233,638.6);
  ctx.bezierCurveTo(1228.5,633.2,1221.3,629.3000000000001,1214,628.6);
  ctx.bezierCurveTo(1211,628.3000000000001,1207.1,628.7,1202.9,629.5);
  ctx.bezierCurveTo(1198.7000000000003,630.3,1193.6000000000001,632.1,1192.8000000000002,633.8);
  ctx.bezierCurveTo(1189,641.6,1192.3,663.8,1192.1,678.9);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.restore();
  ctx.restore();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  ctx.beginPath();
  ctx.moveTo(1368.8,0);
  ctx.lineTo(1264.3999999999999,928.4);
  ctx.bezierCurveTo(1264.3999999999999,975.8,1119.8999999999999,1014.1999999999999,941.5999999999999,1014.1999999999999);
  ctx.bezierCurveTo(763.3,1014.1999999999999,618.8,975.8,618.8,928.4);
  ctx.lineTo(519.5,0);
  ctx.lineTo(-114.70000000000005,0);
  ctx.lineTo(-114.70000000000005,1122.8);
  ctx.lineTo(2147.7,1122.8);
  ctx.lineTo(2147.7,0);
  ctx.lineTo(1368.8,0);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#000000'
  ctx.beginPath();
  ctx.moveTo(1340,0);
  ctx.bezierCurveTo(1340.6,1.7,1340.8,3.4,1340.8,5.2);
  ctx.bezierCurveTo(1340.8,6.300000000000001,1340.7,7.4,1340.3999999999999,8.5);
  ctx.lineTo(1238.6,914.5);
  ctx.bezierCurveTo(1238.6,958.1,1105.6,993.5,941.4999999999999,993.5);
  ctx.bezierCurveTo(777.3999999999999,993.5,644.3999999999999,958.1,644.3999999999999,914.5);
  ctx.lineTo(547.6,8.3);
  ctx.bezierCurveTo(547.4,7.300000000000001,547.3000000000001,6.200000000000001,547.3000000000001,5.200000000000001);
  ctx.bezierCurveTo(547.3000000000001,3.500000000000001,547.6,1.700000000000001,548.1,8.881784197001252e-16);
  ctx.lineTo(519.3000000000001,8.881784197001252e-16);
  ctx.lineTo(618.5000000000001,927.9);
  ctx.bezierCurveTo(618.5000000000001,975.3,763.0000000000001,1013.6999999999999,941.3000000000002,1013.6999999999999);
  ctx.bezierCurveTo(1119.6000000000004,1013.6999999999999,1264.1000000000001,975.3,1264.1000000000001,927.9);
  ctx.lineTo(1368.5,0);
  ctx.lineTo(1340,0);
  ctx.closePath();
  ctx.fill();
  ctx.stroke();
  ctx.restore();
  ctx.restore();
}

function Reverse(){
  if (timing > 430){beShow = true}
  push();
  fill(255)
  noStroke();
  
  for (let i = 0; i < form.length; i++) {
    r1 = map(dist(form[i].x,form[i].y,shape[i].x,shape[i].y),0,50,1,20)
    circle(form[i].x, form[i].y,r1);
    if (form[i].y - shape.y > 20){
      if (form[i].y >= shape.y){
        form[i].y -= random(5);
      }
    }
      if (form[i].x < shape[i].x) {
          form[i].x++;
        }

      if (form[i].x > shape[i].x) {
        form[i].x--;
      }

      if (form[i].y > shape[i].y) {
        form[i].y--;
      }

      if (form[i].y < shape[i].y) {
        form[i].y++;
    }
  }
  pop();
}

function shapeToForm(){
  push();
  fill(255);
  noStroke();
  beginShape();
  for (let i = 0; i < form.length; i++) {
    circle(form[i].x, form[i].y, 1);
      if (form[i].x < reForm[i].x) {
        form[i].x++;
      }

      if (form[i].x > reForm[i].x) {
        form[i].x--;
      }

      if (form[i].y > reForm[i].y) {
        form[i].y--;
      }

      if (form[i].y < reForm[i].y) {
        form[i].y++;
    }
  }
  endShape(CLOSE);
  pop();
  
}





